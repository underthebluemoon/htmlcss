* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.container {
  background-color: #000;
  padding: 10px;
  /* 그리드 */
  display: grid;
  /* 원하는 칸 갯수만큼 값을 적으면 됨 */
  /* 첫번쨰 칸 : 50px, 1fr 1fr : 남아있는 비율을 1:1로 차지 */
  grid-template-columns: 50px 1fr 1fr;
  grid-template-rows: 2fr 1fr 100px;
}

.item {
  background-color: skyblue;
  border: 1px solid #fff;
}

.container-repeat {
  padding: 50px;
  background-color: #000;
  display: grid;
  /* repeat() : 반복되는 값에 대해 자동으로 처리하는 함수 */
  /* ( 만들고 싶은 셀 갯수, 셀 크기 ) */
  /* grid-template-columns: repeat(3, 1fr); */

  /* minmax() : 최소값과 최대값을 지정할 수 있는 함수 */
  /* grid-template-columns: repeat(3, minmax(200px, 1fr)); */
  
  /* auto-fit, auto-fill : 자동으로 컬럼 수를 조절 */
  /* auto-fit : 그리드 아이템의 갯수와 셀의 갯수가 일치한 채로 너비 조절 */
  /* auto-fill : min으로 설정한 공간에 들어갈 수 있다면 빈 셀을 증가시키며 조절 */
  grid-template-columns: repeat(auto-fill, minmax(500px, 1fr));

  /* gap: value값 여러개 가능. cloumn-gap, row-gap 따로 지정 가능 */
  gap: 20px 0;
}

.container-start-end {
  background-color: #000;
  padding: 10px;
  margin: 10px;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
}

/* 셀의 영역 기준으로 아이템 배치 */
.container-start-end > .item:nth-child(1) {
  /* grid-column|row : 그리드(셀 아님!) 시작/끝 으로 영역 지정 */
  /* 시작 그리드/span 갯수 로 설정할 경우 'span 갯수'는 칸(셀 갯수) 수로 표기 가능. 1/3=1/span 2*/
  grid-column: 1/span 2;
  grid-row: 1/3;
}
.container-start-end > .item:nth-child(7) {
  grid-column: 3/4;
  grid-row: 3/5;
}